{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GDLoginService {\n  constructor(http) {\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.localUrl = 'http://localhost:64598/api/';\n    this.url = this.localUrl;\n  }\n  checkPassword(user, password) {\n    return of({\n      data: ''\n    });\n  }\n  static #_ = this.ɵfac = function GDLoginService_Factory(t) {\n    return new (t || GDLoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GDLoginService,\n    factory: GDLoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","of","GDLoginService","constructor","http","httpOptions","headers","localUrl","url","checkPassword","user","password","data","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\dovga\\source\\repos\\gd-window-example\\projects\\gd-login\\src\\lib\\gd-login.service.ts"],"sourcesContent":["import { Injectable     } from '@angular/core';\nimport { HttpClient     } from '@angular/common/http';\nimport { HttpHeaders    } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GDLoginService \n{\n    private httpOptions = \n    {        \n        headers : new HttpHeaders( { 'Content-Type' : 'application/json' } )\n    };\n\n    private localUrl    = 'http://localhost:64598/api/'; \n    private url         = this.localUrl;\n\n    constructor( private http : HttpClient ) \n    {\n    }\n\n    public checkPassword( user : string, password : string ) : Observable<any>\n    {\n        return of({data: ''});\n    }\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAW,sBAAsB;AAErD,SAAqBC,EAAE,QAAQ,MAAM;;;AAKrC,OAAM,MAAOC,cAAc;EAUvBC,YAAqBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IARjB,KAAAC,WAAW,GACnB;MACIC,OAAO,EAAG,IAAIN,WAAW,CAAE;QAAE,cAAc,EAAG;MAAkB,CAAE;KACrE;IAEO,KAAAO,QAAQ,GAAM,6BAA6B;IAC3C,KAAAC,GAAG,GAAW,IAAI,CAACD,QAAQ;EAInC;EAEOE,aAAaA,CAAEC,IAAa,EAAEC,QAAiB;IAElD,OAAOV,EAAE,CAAC;MAACW,IAAI,EAAE;IAAE,CAAC,CAAC;EACzB;EAAC,QAAAC,CAAA,G;qBAjBQX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdhB,cAAc;IAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}